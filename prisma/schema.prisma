datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Tutor {
  tutor_id               Int     @id @default(autoincrement())
  user_id                Int     @unique
  bio                    String?
  experience_years       Int?
  rate_per_hour          Float?
  available_time         String?
  is_active              Boolean @default(true)
  verification_documents String?
  education_background   String?
  rating_average         Float?

  user          User          @relation(fields: [user_id], references: [user_id])
  tutor_courses TutorCourse[]

  bookings Booking[] // แมป relation ไปยัง Booking.tutor

  @@map("tutors")
}

model User {
  user_id         Int      @id @default(autoincrement())
  name            String
  surname         String
  email           String   @unique
  phone           String?
  username        String   @unique
  password        String
  role            String   @default("student")
  status          String   @default("Pending")
  profile_image   String?
  education_level String?
  created_at      DateTime @default(now())

  tutor Tutor?

  bookings Booking[] // แมป relation ไปยัง Booking.student

  @@map("users")
}

model Subject {
  subject_id  Int     @id @default(autoincrement())
  name        String
  description String?

  tutorCourses TutorCourse[]

  @@map("subjects")
}

model TutorCourse {
  course_id          Int     @id @default(autoincrement())
  tutor_id           Int
  subject_id         Int
  course_title       String
  course_description String?
  rate_per_hour      Float?
  teaching_method    String?
  level              String?

  tutor    Tutor     @relation(fields: [tutor_id], references: [tutor_id])
  subject  Subject   @relation(fields: [subject_id], references: [subject_id])
  bookings Booking[]

  @@map("tutor_courses")
}

model Booking {
  booking_id   Int      @id @default(autoincrement())
  student_id   Int
  course_id    Int
  booking_date DateTime
  status       String
  tutor_id     Int
  total_amount Float

  student User        @relation(fields: [student_id], references: [user_id])
  tutor   Tutor       @relation(fields: [tutor_id], references: [tutor_id])
  course  TutorCourse @relation(fields: [course_id], references: [course_id], onDelete: Cascade)

  @@map("bookings")
}
