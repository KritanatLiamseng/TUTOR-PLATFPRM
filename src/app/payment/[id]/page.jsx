"use client";

import { useEffect, useState } from "react";
import { useParams, useRouter } from "next/navigation";
import {
  CreditCard,
  CalendarClock,
  BookOpenText,
  UserRound,
  BadgeDollarSign,
  AlertCircle,
} from "lucide-react";

export default function PaymentPage() {
  const { id } = useParams();
  const router = useRouter();
  const [booking, setBooking] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    if (!id) return;

    fetch(`/api/bookings/${id}`)
      .then((res) => res.json())
      .then((data) => {
        if (!data || data.error) throw new Error(data.error || "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
        setBooking(data);
      })
      .catch((err) => {
        alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " + err.message);
      })
      .finally(() => setLoading(false));
  }, [id]);

  if (loading) return <p className="p-6">‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‚Ä¶</p>;
  if (!booking) return <p className="p-6 text-red-600">‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</p>;

  const hasPaid = booking.payments?.some((p) => p.paid);

  return (
    <div className="max-w-2xl mx-auto p-8 bg-white rounded-2xl shadow-lg space-y-6 mt-10 border border-gray-200">
      <h1 className="text-3xl font-bold flex items-center space-x-2">
        <CreditCard className="text-blue-600 w-6 h-6" />
        <span>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</span>
      </h1>

      <div className="space-y-4 text-gray-800 text-lg">
        <p className="flex items-center gap-2">
          <BookOpenText className="text-indigo-500" />
          <strong>‡∏£‡∏´‡∏±‡∏™‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á:</strong> {booking.booking_id}
        </p>

        <p className="flex items-center gap-2">
          <BookOpenText className="text-purple-600" />
          <strong>‡∏ß‡∏¥‡∏ä‡∏≤:</strong> {booking.course?.course_title} ({booking.course?.subject})
        </p>

        <p className="flex items-center gap-2">
          <UserRound className="text-green-600" />
          <strong>‡∏ú‡∏π‡πâ‡∏™‡∏≠‡∏ô:</strong> {booking.course?.tutor?.name} {booking.course?.tutor?.surname}
        </p>

        <p className="flex items-center gap-2">
          <CalendarClock className="text-orange-500" />
          <strong>‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°:</strong>{" "}
          {new Date(booking.booking_date).toLocaleString("th-TH", {
            dateStyle: "medium",
            timeStyle: "short",
          })}
        </p>

        <p className="flex items-center gap-2 text-xl text-black font-semibold">
          <BadgeDollarSign className="text-yellow-600" />
          <strong>‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞:</strong>{" "}
          {Number(booking.total_amount).toFixed(2)} ‡∏ö‡∏≤‡∏ó
        </p>

        {!hasPaid && (
          <p className="text-red-600 flex items-center gap-2 text-sm">
            <AlertCircle className="w-5 h-5" />
            ‚ö†Ô∏è ‡πÇ‡∏õ‡∏£‡∏î‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
          </p>
        )}
      </div>

      {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô */}
      {booking.status === "confirmed" && !hasPaid && (
        <div className="pt-6 border-t">
          <button
            onClick={() => router.push(`/payment/${booking.booking_id}/confirm`)}
            className="w-full px-6 py-3 mt-4 rounded-lg bg-blue-600 text-white text-lg font-semibold hover:bg-blue-700 transition"
          >
            üí≥ ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
          </button>
        </div>
      )}

      {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à */}
      {booking.status === "confirmed" && hasPaid && (
        <div className="pt-6 border-t mt-8">
          <button
            onClick={async () => {
              const confirm = window.confirm("‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß?");
              if (!confirm) return;

              const res = await fetch(`/api/bookings/${booking.booking_id}`, {
                method: "PUT",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ status: "completed" }),
              });

              const data = await res.json();
              if (!res.ok) {
                alert("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏î‡πâ: " + (data.error || "unknown"));
                return;
              }

              alert("‚úÖ ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô ‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏´‡πâ‡∏ï‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÅ‡∏•‡πâ‡∏ß");
              setBooking({ ...booking, status: "completed" });
            }}
            className="w-full px-6 py-3 mt-4 rounded-lg bg-green-600 text-white text-lg font-semibold hover:bg-green-700 transition"
          >
            ‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ß‡πà‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß
          </button>
        </div>
      )}
    </div>
  );
}
